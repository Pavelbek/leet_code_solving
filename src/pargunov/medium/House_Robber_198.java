package pargunov.medium;

public class House_Robber_198 {
    // good video https://youtu.be/VXqUQYGMnQg?si=EI4mrbDNaeqp9bba
    public int rob(int[] nums) {
        int rob1 = 0; // prev rob
        int rob2 = 0; // last rob

        for (int num : nums) {
            int tmp = Math.max(num + rob1, rob2); // here I keep max if I rob current house
            rob1 = rob2; // here I keep max value for all previous to current house values
            rob2 = tmp; // I keep max value if I robbed last house here
            // пример массива  [2, 7, 3, 1, 4, 2, 1, 8]
            // т е я храню максимум который могу украсть для допустим 1го дома есть он у нас один - [2,
            // если у нас 2 дома, то максимум - 7, в дп массиве будет так: [2, 7] - максимум который можем награбить из таких двух домов
            // далее в игру входит 3 - и мы смотрим стоит его грабить или нет, у нас дп массив 2 и 7 где 2 это максим который мы смогли получить
            // не грабя прошлый дом, а 7 это грабя прошлый дом, но если мы ограбили прошлый дом то текущий мы не можем грабить
            // и мы смотри текущий до 3 + 2 (максимум не грабя прошлый) это больше чем если мы не будем нрабить текущий а возьмем просто
            // значение с учетом ограбления прошлого дома т е 7 и 7 конечно больше, поэто массив становится таким [2, 7, 7] - т е для дома где
            // лежит 3 на этапе этого дома нам максимум может быть 7 и так вот с такой логикой двигаемся дальше.
        }

        return rob2;
    }
}
